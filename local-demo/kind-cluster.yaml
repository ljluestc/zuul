# kind cluster configuration for zero trust demo
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: zuul-zero-trust-local
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true,security.k8s.io/trusted=true"
  extraPortMappings:
  # Istio Ingress Gateway
  - containerPort: 80
    hostPort: 8080
    protocol: TCP
  - containerPort: 443
    hostPort: 8443
    protocol: TCP
  # Grafana
  - containerPort: 30300
    hostPort: 30300
    protocol: TCP
  # Prometheus
  - containerPort: 30900
    hostPort: 9090
    protocol: TCP
  # Jaeger
  - containerPort: 31686
    hostPort: 16686
    protocol: TCP
  # Zuul Gateway direct access
  - containerPort: 30080
    hostPort: 8000
    protocol: TCP
  extraMounts:
  - hostPath: /var/run/docker.sock
    containerPath: /var/run/docker.sock

# Worker nodes for distributed workload
- role: worker
  labels:
    security.k8s.io/trusted: "true"
    workload-type: "general"

- role: worker
  labels:
    security.k8s.io/trusted: "true"
    workload-type: "security"
  kubeadmConfigPatches:
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "workload-type=security"
      taints:
      - key: "security"
        value: "required"
        effect: "NoSchedule"

networking:
  # Use different subnet to avoid conflicts
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/16"
  disableDefaultCNI: false

# Enable feature gates for security
featureGates:
  PodSecurity: true
  NetworkPolicy: true